# name: CI
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#   workflow_dispatch:

# env:
#   NX_CLOUD_DISTRIBUTED_EXECUTION: true
#   BROWSER_STACK_USERNAME: ${{ secrets.BROWSER_STACK_USERNAME }}
#   BROWSER_STACK_ACCESS_KEY: ${{ secrets.BROWSER_STACK_ACCESS_KEY }}

# jobs:
#   main:
#     runs-on: ubuntu-latest
#     if: ${{ github.event_name != 'pull_request' }}
#     steps:
#       - uses: actions/checkout@v2
#         name: Checkout [main]
#         with:
#           # We need to fetch all branches and commits so that Nx affected has a base to compare against.
#           fetch-depth: 0
#       - name: Derive appropriate SHAs for base and head for `nx affected` commands
#         uses: nrwl/nx-set-shas@v2
#       - uses: actions/setup-node@v2
#         with:
#           cache: 'npm'
#           node-version: '14'
#       - run: npm install
#       - run: npx nx-cloud start-ci-run
#       - run: npx nx affected --target=lint --parallel --maxParallel=2 --exclude=showcase
#       - run: npx nx affected --target=build --parallel --maxParallel=2 --exclude=showcase
#       - run: npx nx run all:test --karmaConfig=karma.ci.conf.js --skip-nx-cache
#       - name: Stop Nx Cloud agents
#         if: always()
#         run: npx nx-cloud stop-all-agents
#   pr:
#     runs-on: ubuntu-latest
#     if: ${{ github.event_name == 'pull_request' }}
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           ref: ${{ github.event.pull_request.head.ref }}
#           # We need to fetch all branches and commits so that Nx affected has a base to compare against.
#           fetch-depth: 0
#       - name: Derive appropriate SHAs for base and head for `nx affected` commands
#         uses: nrwl/nx-set-shas@v2
#       - uses: actions/setup-node@v2
#         with:
#           cache: 'npm'
#           node-version: '14'
#       - run: npm install
#       - name: Start Nx Cloud agents
#         run: npx nx-cloud start-ci-run
#       - name: Run lint
#         run: npx nx affected --target=lint --parallel --maxParallel=2 --exclude=showcase
#       - name: Build libraries
#         run: npx nx affected --target=build --parallel --maxParallel=2 --exclude=showcase
#       - name: Run code coverage
#         run: npx nx run all:test --karmaConfig=karma.ci.conf.js --skip-nx-cache
#       - name: Stop Nx Cloud agents
#         if: always()
#         run: npx nx-cloud stop-all-agents
#   agents:
#     runs-on: ubuntu-latest
#     name: Agent 1
#     timeout-minutes: 60
#     strategy:
#       matrix:
#         agent: [1, 2]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#         with:
#           cache: 'npm'
#           node-version: '14'
#       - run: npm install
#       - name: Start Nx Agent ${{ matrix.agent }}
#         run: npx nx-cloud start-agent
