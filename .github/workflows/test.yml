name: Test
on:
  pull_request:
  workflow_dispatch:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  BROWSER_STACK_USERNAME: ${{ secrets.BROWSER_STACK_USERNAME }}
  BROWSER_STACK_ACCESS_KEY: ${{ secrets.BROWSER_STACK_ACCESS_KEY }}

jobs:
  agents:
    runs-on: ubuntu-latest
    name: Nx Cloud Agent
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          cache: 'npm'
          node-version: '14'
      - run: npm install
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v2
        with:
          cache: 'npm'
          node-version: '14'
      - run: npm install
      - name: Activate Nx Cloud agent
        run: npx nx-cloud start-ci-run
      - name: Check code formatting
        run: npx prettier --check .
      - name: Run lint
        run: npx nx affected --target=lint --format=compact --silent --parallel --maxParallel=5
      - name: Build libraries
        run: npx nx affected --target=build --parallel --maxParallel=5

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        karmaConfig: ['karma.all.conf.js', 'karma.ci.conf.js']
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v2
        with:
          cache: 'npm'
          node-version: '14'
      - run: npm install
      - name: Activate Nx Cloud agent
        run: npx nx-cloud start-ci-run
      - name: Run code coverage
        run: export NODE_OPTIONS="--max-old-space-size=8192" && npx nx run all:test --karmaConfig=${{ matrix.karmaConfig }} --skip-nx-cache

  stop-agents:
    runs-on: ubuntu-latest
    if: always()
    needs: [build, test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          cache: 'npm'
          node-version: '14'
      - name: Stop Nx Cloud agents
        run: npx nx-cloud stop-all-agents
