# name: Test
# on:
#   pull_request:
#     types:
#       - edited
#       - opened
#       - reopened
#       - synchronize

# # env:
# # GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
# # BROWSER_STACK_USERNAME: ${{ secrets.BROWSER_STACK_USERNAME }}
# # BROWSER_STACK_ACCESS_KEY: ${{ secrets.BROWSER_STACK_ACCESS_KEY }}
# # NX_CLOUD_DISTRIBUTED_EXECUTION: true

# jobs:
#   validate-pr-title:
#     name: Validate PR title
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           ref: ${{ github.event.pull_request.head.ref }}
#           fetch-depth: 0
#       - uses: actions/setup-node@v2
#       - uses: beemojs/conventional-pr-action@v2
#         env:
#           GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

#   # install-deps:
#   #   name: Install and cache dependencies
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #     - name: Cache node modules
#   #       id: cache
#   #       uses: actions/cache@v2
#   #       with:
#   #         path: node_modules
#   #         key: cache-node-modules-${{ hashFiles('package-lock.json') }}
#   #     - uses: actions/setup-node@v2
#   #       if: steps.cache.outputs.cache-hit != 'true'
#   #       with:
#   #         cache: npm
#   #         node-version: '14'
#   #     - name: npm install
#   #       if: steps.cache.outputs.cache-hit != 'true'
#   #       run: npm ci

#   # agents:
#   #   name: Bootup Nx Cloud agent
#   #   runs-on: ubuntu-latest
#   #   needs: install-deps
#   #   strategy:
#   #     matrix:
#   #       agent: [1, 2, 3]
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #     - name: Retrieve node_modules cache
#   #       uses: actions/cache@v2
#   #       with:
#   #         path: node_modules
#   #         key: cache-node-modules-${{ hashFiles('package-lock.json') }}
#   #     - name: Start Nx Agent ${{ matrix.agent }}
#   #       run: npx nx-cloud start-agent

#   # start-ci-run:
#   #   name: Start Nx Cloud CI run
#   #   runs-on: ubuntu-latest
#   #   needs: install-deps
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #     - name: Retrieve node_modules cache
#   #       uses: actions/cache@v2
#   #       with:
#   #         path: node_modules
#   #         key: cache-node-modules-${{ hashFiles('package-lock.json') }}
#   #     - run: npx nx-cloud start-ci-run

#   # lint:
#   #   name: Lint
#   #   needs: [install-deps, start-ci-run]
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #       with:
#   #         ref: ${{ github.event.pull_request.head.ref }}
#   #         # We need to fetch all branches and commits so that Nx affected has a base to compare against.
#   #         fetch-depth: 0
#   #     - name: Derive appropriate SHAs for base and head for `nx affected` commands
#   #       uses: nrwl/nx-set-shas@v2
#   #     - uses: actions/setup-node@v2
#   #       with:
#   #         cache: 'npm'
#   #         node-version: '14'
#   #     - name: Retrieve node_modules cache
#   #       uses: actions/cache@v2
#   #       with:
#   #         path: node_modules
#   #         key: cache-node-modules-${{ hashFiles('package-lock.json') }}
#   #     - name: Check code formatting
#   #       run: npx prettier --check .
#   #     - name: Run lint
#   #       run: npx nx affected --target=lint --format=compact --silent --parallel --maxParallel=5

#   # build:
#   #   name: Build
#   #   needs: [install-deps, start-ci-run]
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #       with:
#   #         ref: ${{ github.event.pull_request.head.ref }}
#   #         # We need to fetch all branches and commits so that Nx affected has a base to compare against.
#   #         fetch-depth: 0
#   #     - name: Derive appropriate SHAs for base and head for `nx affected` commands
#   #       uses: nrwl/nx-set-shas@v2
#   #     - uses: actions/setup-node@v2
#   #       with:
#   #         cache: 'npm'
#   #         node-version: '14'
#   #     - name: Retrieve node_modules cache
#   #       uses: actions/cache@v2
#   #       with:
#   #         path: node_modules
#   #         key: cache-node-modules-${{ hashFiles('package-lock.json') }}
#   #     - name: Build libraries
#   #       run: npx nx affected --target=build --parallel --max-parallel=3

#   # coverage:
#   #   name: Code coverage
#   #   needs: [install-deps, start-ci-run]
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #       with:
#   #         ref: ${{ github.event.pull_request.head.ref }}
#   #         # We need to fetch all branches and commits so that Nx affected has a base to compare against.
#   #         fetch-depth: 0
#   #     - name: Derive appropriate SHAs for base and head for `nx affected` commands
#   #       uses: nrwl/nx-set-shas@v2
#   #     - uses: actions/setup-node@v2
#   #       with:
#   #         cache: 'npm'
#   #         node-version: '14'
#   #     - name: Retrieve node_modules cache
#   #       uses: actions/cache@v2
#   #       with:
#   #         path: node_modules
#   #         key: cache-node-modules-${{ hashFiles('package-lock.json') }}
#   #     - name: Code coverage
#   #       run: export NX_CLOUD_DISTRIBUTED_EXECUTION=false && npx nx run all:test --karmaConfig=config/karma/karma.all.conf.js --skip-nx-cache --codeCoverage=true --watch=false

#   # browserstack:
#   #   name: Cross-browser testing
#   #   needs: [install-deps, start-ci-run]
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #       with:
#   #         ref: ${{ github.event.pull_request.head.ref }}
#   #         # We need to fetch all branches and commits so that Nx affected has a base to compare against.
#   #         fetch-depth: 0
#   #     - name: Derive appropriate SHAs for base and head for `nx affected` commands
#   #       uses: nrwl/nx-set-shas@v2
#   #     - uses: actions/setup-node@v2
#   #       with:
#   #         cache: 'npm'
#   #         node-version: '14'
#   #     - name: Retrieve node_modules cache
#   #       uses: actions/cache@v2
#   #       with:
#   #         path: node_modules
#   #         key: cache-node-modules-${{ hashFiles('package-lock.json') }}
#   #     - name: Cross-browser tests
#   #       run: export NX_CLOUD_DISTRIBUTED_EXECUTION=false && npx nx run all:test --karmaConfig=config/karma/karma.ci.conf.js --skip-nx-cache --codeCoverage=false --watch=false --sourceMap=false

#   # stop-agents:
#   #   name: Stop Nx Cloud agents
#   #   runs-on: ubuntu-latest
#   #   if: always()
#   #   needs: [lint, build, coverage, browserstack]
#   #   steps:
#   #     - uses: actions/checkout@v2
#   #     - uses: actions/setup-node@v2
#   #       with:
#   #         cache: 'npm'
#   #         node-version: '14'
#   #     - name: Retrieve node_modules cache
#   #       uses: actions/cache@v2
#   #       with:
#   #         path: node_modules
#   #         key: cache-node-modules-${{ hashFiles('package-lock.json') }}
#   #     - name: Stop Nx Cloud agents
#   #       run: npx nx-cloud stop-all-agents
